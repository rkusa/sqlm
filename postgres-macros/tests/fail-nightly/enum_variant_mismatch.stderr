error[E0277]: the trait bound `Vec<User>: sqlm_postgres::query::Query<Struct<(StructColumn<i64, "id">, StructColumn<sqlm_postgres::types::Enum<(EnumVariant<"admin">, EnumVariant<"user">)>, "role">)>>` is not satisfied
  --> tests/fail-nightly/enum_variant_mismatch.rs:23:59
   |
23 |     let _: Vec<User> = sql!("SELECT id, role FROM users").await.unwrap();
   |                                                          -^^^^^
   |                                                          ||
   |                                                          |unsatisfied trait bound
   |                                                          help: remove the `.await`
   |
   = help: the trait `sqlm_postgres::query::Query<Struct<(StructColumn<i64, "id">, StructColumn<sqlm_postgres::types::Enum<(EnumVariant<"admin">, EnumVariant<"user">)>, "role">)>>` is not implemented for `Vec<User>`
   = help: the following other types implement trait `sqlm_postgres::query::Query<Cols>`:
             `Vec<T>` implements `sqlm_postgres::query::Query<Primitive<<T as SqlType>::Type>>`
             `Vec<T>` implements `sqlm_postgres::query::Query<Struct<Cols>>`
             `Vec<T>` implements `sqlm_postgres::query::Query<sqlm_postgres::types::Array<Vec<<T as SqlType>::Type>>>`
             `Vec<Vec<u8>>` implements `sqlm_postgres::query::Query<Primitive<Bytea>>`
             `Vec<Vec<u8>>` implements `sqlm_postgres::query::Query<sqlm_postgres::types::Array<Vec<Bytea>>>`
             `Vec<u8>` implements `sqlm_postgres::query::Query<Primitive<Bytea>>`
   = note: required for `Sql<'_, Struct<(StructColumn<i64, "id">, StructColumn<sqlm_postgres::types::Enum<(EnumVariant<"admin">, EnumVariant<"user">)>, "role">)>, Vec<User>>` to implement `IntoFuture`
