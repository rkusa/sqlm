error[E0277]: the trait bound `Vec<User>: Query<Struct<(StructColumn<i64, "id">, StructColumn<sqlm_postgres::types::Enum<(EnumVariant<"admin">, EnumVariant<"user">)>, "role">)>>` is not satisfied
  --> tests/fail-nightly/enum_missing_variant.rs:20:59
   |
20 |     let _: Vec<User> = sql!("SELECT id, role FROM users").await.unwrap();
   |                                                          -^^^^^
   |                                                          ||
   |                                                          |the trait `Query<Struct<(StructColumn<i64, "id">, StructColumn<sqlm_postgres::types::Enum<(EnumVariant<"admin">, EnumVariant<"user">)>, "role">)>>` is not implemented for `Vec<User>`, which is required by `Sql<'_, Struct<(StructColumn<i64, "id">, StructColumn<sqlm_postgres::types::Enum<(EnumVariant<"admin">, EnumVariant<"user">)>, "role">)>, _>: IntoFuture`
   |                                                          help: remove the `.await`
   |
   = help: the following other types implement trait `Query<Cols>`:
             <Vec<T> as Query<Primitive<<T as SqlType>::Type>>>
             <Vec<T> as Query<Struct<Cols>>>
             <Vec<T> as Query<sqlm_postgres::types::Array<Vec<<T as SqlType>::Type>>>>
             <Vec<Vec<u8>> as Query<Primitive<Bytea>>>
             <Vec<Vec<u8>> as Query<sqlm_postgres::types::Array<Vec<Bytea>>>>
             <Vec<u8> as Query<Primitive<Bytea>>>
   = note: required for `Sql<'_, Struct<(StructColumn<i64, "id">, StructColumn<sqlm_postgres::types::Enum<(EnumVariant<"admin">, EnumVariant<"user">)>, "role">)>, Vec<User>>` to implement `IntoFuture`
